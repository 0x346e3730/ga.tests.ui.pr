name: Testing PrestaShop pull requests
on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: Pull request to test
        required: true
      base_branch:
        description: Base branch to rebase the PR
        required: true
        default: 'develop'
      php_version:
        description: PHP version
        required: true
        default: '7.3'

jobs:
  testing-pr:
    runs-on: ubuntu-latest
    name: test
    strategy:
      fail-fast: false
      matrix:
        TEST_COMMAND:
          - 'functional:BO:login'

    env:
      PR_NUMBER: ${{ github.event.inputs.pr_number }}
      BASE_BRANCH: ${{ github.event.inputs.base_branch }}
      PHP_VERSION: ${{ github.event.inputs.php_version }}
      PS_DIR: 'my_prestashop'

    steps:
      - uses: actions/checkout@v2
        with:
          path: main

      - uses: actions/checkout@v2
        name: Checkout PrestaShop repository
        with:
          fetch-depth: 2
          repository: PrestaShop/PrestaShop
          path: ${{ env.PS_DIR }}

      - name: Get pull request
        run: |
          git fetch origin pull/${{ env.PR_NUMBER }}/head:pr${{ env.PR_NUMBER }}
          git checkout pr${{ env.PR_NUMBER }}
        working-directory: ${{ env.PS_DIR }}

      - name: Setup Apache
        run: sudo bash scripts/apache/setup.sh ${{ github.workspace }} ${{ env.PS_DIR }} ${{ env.PHP_VERSION }}
        working-directory: main

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, intl, gd, xml, dom, json, fileinfo, curl, zip, iconv, simplexml, pdo, mysql

      # temporary fix to make latest 7.4 & 8.0 work
      - name: Update PCRE2
        run: sudo apt-get install -y libpcre2-dev

      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '5.7'
          mysql database: 'prestashop'
          mysql root password: 'password'

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache node Directory
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Cache Composer Directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Composer install and build assets
        run: make
        working-directory: ${{ env.PS_DIR }}
